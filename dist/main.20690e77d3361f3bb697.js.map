{"version":3,"file":"main.20690e77d3361f3bb697.js","mappings":"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","sources":["webpack://canvas/./src/utils/Stack.ts","webpack://canvas/./src/enums/Algorithms.ts","webpack://canvas/./src/enums/CellType.ts","webpack://canvas/./src/GameState/GameStateManager.ts","webpack://canvas/./src/GameState/GameState.ts","webpack://canvas/./src/Algorithms/Algorythm.ts","webpack://canvas/./src/Objects/CellNode.ts","webpack://canvas/./src/Algorithms/BFS.ts","webpack://canvas/./src/utils/PriorityQueue.ts","webpack://canvas/./src/Algorithms/AStar.ts","webpack://canvas/./src/GameArea/Cell.ts","webpack://canvas/./src/GameArea/GameArea.ts","webpack://canvas/./src/GameState/states/MainState.ts","webpack://canvas/./src/GameView.ts","webpack://canvas/./src/gui/Gui.ts","webpack://canvas/./src/index.ts"],"sourcesContent":["export class Stack<T> {\r\n\r\n\tprivate array: T[];\r\n\r\n\tpublic constructor() {\r\n\t\tthis.array = [];\r\n\t}\r\n\r\n\r\n\tpublic peek(): T {\r\n\t\treturn this.array[this.array.length - 1];\r\n\t}\r\n\r\n\r\n\tpublic push(value: T) {\r\n\t\tthis.array.push(value);\r\n\t}\r\n\r\n\r\n\tpublic poll(): T {\r\n\t\tconst target = this.array.pop() as T;\r\n\t\tthis.restructure();\r\n\t\treturn target;\r\n\t}\r\n\r\n\r\n\tpublic remove(t: T) {\r\n\t\tthis.array = this.array.filter((value) => {\r\n\t\t\tif (value === t) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\t\tthis.restructure();\r\n\t}\r\n\r\n\r\n\tprivate restructure():void {\r\n\t\tconst arr = [] as T[];\r\n\t\tthis.array.forEach((value) => {\r\n\t\t\tarr.push(value);\r\n\t\t});\r\n\t\tthis.array = arr;\r\n\t}\r\n\r\n\r\n\tpublic size(): number {\r\n\t\treturn this.array.length;\r\n\t}\r\n}\r\n","export enum Algorithms {\r\n\tBFS, ASTAR\r\n}\r\n","export enum CellType {\r\n\tSTART, TARGET, WALL, EARTH, STONE, SAND, WATER\r\n}\r\n","import { Stack } from \"../utils/Stack\";\r\nimport { GameState } from \"./GameState\";\r\n\r\nexport class GameStateManager {\r\n\tprivate states: Stack<GameState>;\r\n\r\n\tpublic constructor() {\r\n\t\tthis.states = new Stack();\r\n\t}\r\n\r\n\tpublic pushState(state: GameState) {\r\n\t\tthis.states.push(state);\r\n\t}\r\n\r\n\r\n\tpublic tick() {\r\n\t\tthis.states.peek().tick();\r\n\t}\r\n\r\n\r\n\tpublic draw(cntx: CanvasRenderingContext2D, canvas: HTMLCanvasElement) {\r\n\t\tthis.states.peek().draw(cntx, canvas);\r\n\t}\r\n\r\n\r\n\tpublic keyPressed(event: KeyboardEvent) {\r\n\t\tthis.states.peek().keyPressed(event);\r\n\t}\r\n\r\n\r\n\tpublic mouseOver(event: MouseEvent) {\r\n\t\tthis.states.peek().mouseOver(event);\r\n\t}\r\n}\r\n","import {GameStateManager} from './GameStateManager';\r\n\r\nexport abstract class GameState {\r\n\r\n\tprivate gsm: GameStateManager;\r\n\r\n\tpublic constructor(gsm: GameStateManager) {\r\n\t\tthis.gsm = gsm;\r\n\t}\r\n\r\n\r\n\tpublic abstract tick(): void;\r\n\tpublic abstract draw(cntx: CanvasRenderingContext2D, canvas: HTMLCanvasElement): void;\r\n\tpublic abstract keyPressed(event: KeyboardEvent): void;\r\n\tpublic abstract mouseOver(event: MouseEvent): void;\r\n}\r\n","import { CellNode } from '../Objects/CellNode';\r\nimport { CellType } from '../enums/CellType';\r\nimport { Cell } from '../GameArea/Cell';\r\nimport { VirtualCell } from '../types/types';\r\n\r\nexport abstract class Algorythm {\r\n\r\n\tprotected area: Cell[][];\r\n\r\n\tpublic foundNode: CellNode | undefined;\r\n\tprotected start: Cell | undefined;\r\n\tprotected target: Cell | undefined;\r\n\tprotected path: CellNode[];\r\n\tprotected virtualArea: VirtualCell[][];\r\n\r\n\tpublic constructor(area: Cell[][]) {\r\n\t\tthis.area = area;\r\n\t\tthis.init();\r\n\t\tthis.path = [] as CellNode[];\r\n\t\tthis.virtualArea = this.initVirtualArea();\r\n\t}\r\n\r\n\r\n\tpublic abstract tick(): void;\r\n\r\n\r\n\tprivate initVirtualArea(): VirtualCell[][] {\r\n\t\tconst virtArea = [] as  VirtualCell[][];\r\n\t\tfor (let i = 0, iLimit = this.area.length; i < iLimit; i++) {\r\n\t\t\tvirtArea.push([] as VirtualCell[]);\r\n\t\t\tfor (let x = 0, xLimit = this.area[i].length; x < xLimit; x++) {\r\n\t\t\t\tvirtArea[i].push(({\r\n\t\t\t\t\tx: x,\r\n\t\t\t\t\ty: i,\r\n\t\t\t\t\tvisited: false\r\n\t\t\t\t}) as VirtualCell);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn virtArea;\r\n\t}\r\n\r\n\r\n\tprivate findStartAndTarget(): StartAndTarget {\r\n\t\tconst target = ({\r\n\t\t\tstart: ({\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t}) as Coordinates,\r\n\t\t\ttarget: ({\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t}) as Coordinates,\r\n\t\t}) as StartAndTarget;\r\n\r\n\t\tlet startFound = false as boolean;\r\n\t\tlet targetFound = false as boolean;\r\n\r\n\t\tfor (let i = 0, iLimit = this.area.length; i < iLimit; i++) {\r\n\t\t\tfor (let x = 0, xLimit = this.area[i].length; x < xLimit; x++) {\r\n\t\t\t\tif (this.area[i][x].type === CellType.START) {\r\n\t\t\t\t\ttarget.start.x = x;\r\n\t\t\t\t\ttarget.start.y = i;\r\n\t\t\t\t\tstartFound = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.area[i][x].type === CellType.TARGET) {\r\n\t\t\t\t\ttarget.target.x = x;\r\n\t\t\t\t\ttarget.target.y = i;\r\n\t\t\t\t\ttargetFound = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (startFound && targetFound) {\r\n\t\t\t\t\treturn target;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t}\r\n\r\n\tprivate init():void {\r\n\t\tconst coordinates = this.findStartAndTarget() as StartAndTarget;\r\n\t\tthis.start = this.area[coordinates.start.y][coordinates.start.x];\r\n\t\tthis.target = this.area[coordinates.target.y][coordinates.target.x];\r\n\t}\r\n}\r\n\r\ninterface StartAndTarget {\r\n\tstart: Coordinates,\r\n\ttarget: Coordinates\r\n}\r\n\r\ninterface Coordinates {\r\n\tx: number,\r\n\ty: number\r\n}\r\n","import { Cell } from '../GameArea/Cell';\r\nimport { CellType } from '../enums/CellType';\r\n\r\nexport class CellNode {\r\n\tprivate readonly x:number;\r\n\tprivate readonly y:number;\r\n\r\n\tprivate value:number;\r\n\r\n\tprivate valueAStar:number;\r\n\r\n\tprivate readonly parent:CellNode | null;\r\n\r\n\tpublic constructor(x:number, y:number, parent:CellNode|null);\r\n\tpublic constructor(x:number, y:number, parent:CellNode|null, value:number);\r\n\tpublic constructor(x:number, y:number, parent:CellNode|null, value:number, valueAStar:number);\r\n\tpublic constructor(x:number, y:number, parent:CellNode|null, value?:number, valueAStar?:number) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.parent = parent;\r\n\t\tthis.value = value ?? Number.MAX_SAFE_INTEGER;\r\n\t\tthis.valueAStar = valueAStar ?? Number.MAX_SAFE_INTEGER;\r\n\t}\r\n\r\n\tpublic getChildren(area: Cell[][]): CellNode[] {\r\n\t\tconst children: CellNode[] = [];\r\n\r\n\t\tconst maxPos = area.length - 1;\r\n\r\n\t\tif (this.x > 0) {\r\n\t\t\tif (area[this.y][this.x - 1].type !== CellType.WALL) {\r\n\t\t\t\tchildren.push(new CellNode(this.x - 1, this.y, this));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.x < maxPos) {\r\n\t\t\tif (area[this.y][this.x + 1].type !== CellType.WALL) {\r\n\t\t\t\tchildren.push(new CellNode(this.x + 1, this.y, this));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.y > 0) {\r\n\t\t\tif (area[this.y - 1][this.x].type !== CellType.WALL) {\r\n\t\t\t\tchildren.push(new CellNode(this.x, this.y - 1, this));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.y < maxPos) {\r\n\t\t\tif (area[this.y + 1][this.x].type !== CellType.WALL) {\r\n\t\t\t\tchildren.push(new CellNode(this.x, this.y + 1, this));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn children;\r\n\t}\r\n\r\n\r\n\tpublic getChildrenAstar(area: Cell[][], targetX: number, targetY: number): CellNode[] {\r\n\t\tconst children = [] as CellNode[];\r\n\r\n\t\tconst maxPos = area.length - 1;\r\n\r\n\t\tif (this.x > 0) {\r\n\t\t\tif (area[this.y][this.x - 1].type !== CellType.WALL) {\r\n\t\t\t\tchildren.push(new CellNode(\r\n\t\t\t\t\tthis.x - 1,\r\n\t\t\t\t\tthis.y,\r\n\t\t\t\t\tthis,\r\n\t\t\t\t\tthis.getDistance(this.x - 1,  this.y, area),\r\n\t\t\t\t\tthis.computeValueAStar(area, targetX, targetY, this.x - 1, this.y),\r\n\t\t\t\t));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.x < maxPos) {\r\n\t\t\tif (area[this.y][this.x + 1].type !== CellType.WALL) {\r\n\t\t\t\tchildren.push(new CellNode(\r\n\t\t\t\t\tthis.x + 1,\r\n\t\t\t\t\tthis.y,\r\n\t\t\t\t\tthis,\r\n\t\t\t\t\tthis.getDistance(this.x + 1,  this.y, area),\r\n\t\t\t\t\tthis.computeValueAStar(area, targetX, targetY, this.x + 1, this.y),\r\n\t\t\t\t));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.y > 0) {\r\n\t\t\tif (area[this.y - 1][this.x].type !== CellType.WALL) {\r\n\t\t\t\tchildren.push(new CellNode(\r\n\t\t\t\t\tthis.x,\r\n\t\t\t\t\tthis.y - 1,\r\n\t\t\t\t\tthis,\r\n\t\t\t\t\tthis.getDistance(this.x,  this.y - 1, area),\r\n\t\t\t\t\tthis.computeValueAStar(area, targetX, targetY, this.x, this.y - 1),\r\n\t\t\t\t));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.y < maxPos) {\r\n\t\t\tif (area[this.y + 1][this.x].type !== CellType.WALL) {\r\n\t\t\t\tchildren.push(new CellNode(\r\n\t\t\t\t\tthis.x,\r\n\t\t\t\t\tthis.y + 1,\r\n\t\t\t\t\tthis,\r\n\t\t\t\t\tthis.getDistance(this.x,  this.y + 1, area),\r\n\t\t\t\t\tthis.computeValueAStar(area, targetX, targetY, this.x, this.y + 1),\r\n\t\t\t\t));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn children;\r\n\t}\r\n\r\n\r\n\tprivate getDistance(x: number, y: number, area: Cell[][]): number {\r\n\t\tconst temp = area[y][x] as Cell;\r\n\t\tlet addDistance = 10 as number;\r\n\t\tswitch (temp.type) {\r\n\t\t\tcase CellType.EARTH:\r\n\t\t\t\taddDistance = 10;\r\n\t\t\t\tbreak;\r\n\t\t\tcase CellType.STONE:\r\n\t\t\t\taddDistance = 1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase CellType.SAND:\r\n\t\t\t\taddDistance = 30;\r\n\t\t\t\tbreak;\r\n\t\t\tcase CellType.WATER:\r\n\t\t\t\taddDistance = 200;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn this.value + addDistance;\r\n\t}\r\n\r\n\r\n\tprivate computeValueAStar(area: Cell[][], targetX: number, targetY: number, x: number, y: number): number {\r\n\t\treturn this.getDistance(x, y, area) + this.getHeiuristic(targetX, targetY, x, y) * 20;\r\n\t}\r\n\r\n\tprivate getHeiuristic(targetX: number, targetY: number, x: number, y: number) {\r\n\t\treturn Math.sqrt(((targetX - x) * (targetX - x)) + ((targetY - y) * (targetY - y)));\r\n\t}\r\n\r\n\r\n\tpublic getX(): number {\r\n\t\treturn this.x;\r\n\t}\r\n\r\n\r\n\tpublic getY():number {\r\n\t\treturn this.y;\r\n\t}\r\n\r\n\r\n\tpublic getParent(): CellNode | null {\r\n\t\treturn this.parent;\r\n\t}\r\n\r\n\r\n\tpublic getValueAStar(): number {\r\n\t\treturn this.valueAStar;\r\n\t}\r\n}\r\n","import { Algorythm } from \"./Algorythm\";\r\nimport { Algorithms } from \"../enums/Algorithms\";\r\nimport { Cell } from \"../GameArea/Cell\";\r\nimport { CellNode } from \"../Objects/CellNode\";\r\n\r\nexport class BFS extends Algorythm {\r\n\r\n\tpublic static ALGORITHM_NAME = Algorithms.BFS as Algorithms;\r\n\r\n\tprivate found = false as boolean;\r\n\r\n\r\n\tpublic constructor(area: Cell[][]) {\r\n\t\tsuper(area);\r\n\t}\r\n\r\n\r\n\ttick(): void {\r\n\t\tif (!this.found) {\r\n\t\t\tif (this.path.length === 0) {\r\n\t\t\t\tthis.path.push(new CellNode(this.start!.getX(), this.start!.getY(), null));\r\n\t\t\t}\r\n\t\t\tconst temp = this.path.shift() as CellNode;\r\n\t\t\tconst workingCell = this.area[temp.getY()][temp.getX()];\r\n\r\n\t\t\tworkingCell.curr = true;\r\n\t\t\tworkingCell.passThrough = true;\r\n\r\n\t\t\tthis.virtualArea[temp.getY()][temp.getX()].visited = true;\r\n\r\n\t\t\tif (temp.getX() === this.target!.getX() && temp.getY() === this.target!.getY()) {\r\n\t\t\t\tworkingCell.passThrough = false;\r\n\t\t\t\tthis.found = true;\r\n\t\t\t\tthis.foundNode = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.found) {\r\n\t\t\t\tconst children = temp.getChildren(this.area) as CellNode[];\r\n\r\n\t\t\t\tchildren.forEach((el: CellNode) => {\r\n\t\t\t\t\tif (!this.virtualArea[el.getY()][el.getX()].visited) {\r\n\t\t\t\t\t\tthis.path.push(el);\r\n\t\t\t\t\t\tthis.virtualArea[el.getY()][el.getX()].visited = true;\r\n\t\t\t\t\t\tthis.area[el.getY()][el.getX()].passThrough = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (this.path.length === 0) {\r\n\t\t\t\tthis.found = false;\r\n\t\t\t\tconsole.log('done');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic isFound():boolean {\r\n\t\treturn this.found;\r\n\t}\r\n}\r\n\r\n\r\n","const topQ = 0 as number;\r\nconst parentQ = (i: number):number => ((i + 1) >>> 1) - 1;\r\nconst leftQ = (i: number):number => ((i << 1) + 1);\r\nconst rightQ = (i:number):number => ((i + 1) << 1);\r\n\r\n\r\nexport class PriorityQueue<T> {\r\n\r\n\tprivate heap: T[];\r\n\tprivate comparator: (a:T, b:T) => boolean;\r\n\r\n\r\n\tpublic constructor(comparator = (a:T, b: T) => a > b) {\r\n\t\tthis.heap = [] as T[];\r\n\t\tthis.comparator = comparator;\r\n\t}\r\n\r\n\r\n\tpublic size(): number {\r\n\t\treturn this.heap.length;\r\n\t}\r\n\r\n\r\n\tpublic isEmpty(): boolean {\r\n\t\treturn this.heap.length === 0;\r\n\t}\r\n\r\n\r\n\tpublic peek() {\r\n\t\treturn this.heap[topQ];\r\n\t}\r\n\r\n\r\n\tpublic push(...values:T[]):number {\r\n\t\tvalues.forEach((value: T) => {\r\n\t\t\tthis.heap.push(value);\r\n\t\t\tthis.shiftUp();\r\n\t\t});\r\n\t\treturn this.size();\r\n\t}\r\n\r\n\tpublic pop():T {\r\n\t\tconst poppedValue:T = this.peek();\r\n\t\tconst bottom:number = this.size() - 1;\r\n\t\tif (bottom > topQ) {\r\n\t\t\tthis.swap(topQ, bottom);\r\n\t\t}\r\n\t\tthis.heap.pop();\r\n\t\tthis.shiftDown();\r\n\t\treturn poppedValue;\r\n\t}\r\n\r\n\tpublic replace(value:T) {\r\n\t\tconst replacedValue = this.peek();\r\n\t\tthis.heap[topQ] = value;\r\n\t\tthis.shiftDown();\r\n\t\treturn replacedValue;\r\n\t}\r\n\r\n\tprivate isGreater(i:number, j:number) {\r\n\t\treturn this.comparator(this.heap[i], this.heap[j]);\r\n\t}\r\n\r\n\tprivate swap(i:number, j:number) {\r\n\t\t[this.heap[i], this.heap[j]] = [this.heap[j], this.heap[i]];\r\n\t}\r\n\r\n\tprivate shiftUp() {\r\n\t\tlet node:number = this.size() - 1;\r\n\t\twhile(node > topQ && this.isGreater(node, parentQ(node))) {\r\n\t\t\tthis.swap(node, parentQ(node));\r\n\t\t\tnode = parentQ(node);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate shiftDown() {\r\n\t\tlet node:number = topQ;\r\n\t\twhile(\r\n\t\t\t(leftQ(node) < this.size() && this.isGreater(leftQ(node), node)) ||\r\n\t\t\t(rightQ(node) < this.size() && this.isGreater(rightQ(node), node))\r\n\t\t) {\r\n\t\t\tconst maxChild:number = (rightQ(node) < this.size() && this.isGreater(rightQ(node), leftQ(node))) ? rightQ(node) : leftQ(node);\r\n\t\t\tthis.swap(node, maxChild);\r\n\t\t\tnode = maxChild;\r\n\t\t}\r\n\t}\r\n}\r\n","import { Algorythm } from \"./Algorythm\";\r\nimport { Algorithms } from \"../enums/Algorithms\";\r\nimport { Cell } from \"../GameArea/Cell\";\r\nimport { CellNode } from \"../Objects/CellNode\";\r\nimport { PriorityQueue } from \"../utils/PriorityQueue\";\r\n\r\nexport class AStar extends Algorythm {\r\n\r\n\tpublic static ALGORITHM_NAME = Algorithms.ASTAR as Algorithms;\r\n\r\n\tprivate found = false as boolean;\r\n\tprivate aStarPath: PriorityQueue<CellNode>;\r\n\r\n\tprivate index = 0 as number;\r\n\r\n\tpublic constructor(area: Cell[][]) {\r\n\t\tsuper(area);\r\n\t\tthis.aStarPath = new PriorityQueue((a, b) => a.getValueAStar() < b.getValueAStar());\r\n\t}\r\n\r\n\r\n\tpublic tick(): void {\r\n\t\tif (!this.found) {\r\n\t\t\tif (this.aStarPath.size() === 0) {\r\n\t\t\t\tthis.aStarPath.push(new CellNode(this.start!.getX(), this.start!.getY(), null, 0, 0));\r\n\t\t\t}\r\n\r\n\t\t\tconst temp = this.aStarPath.pop();\r\n\t\t\tconst workingCell = this.area[temp.getY()][temp.getX()];\r\n\r\n\t\t\tworkingCell.curr = true;\r\n\t\t\tworkingCell.passThrough = true;\r\n\t\t\tworkingCell.visited = true;\r\n\r\n\t\t\tthis.virtualArea[temp.getY()][temp.getX()].visited = true;\r\n\r\n\t\t\tif (temp.getX() === this.target?.getX() && temp.getY() === this.target.getY()) {\r\n\t\t\t\tworkingCell.passThrough = false;\r\n\t\t\t\tworkingCell.curr = false;\r\n\t\t\t\tworkingCell.visited = false;\r\n\t\t\t\tthis.found = true;\r\n\t\t\t\tthis.foundNode = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.found) {\r\n\t\t\t\tconst children = temp.getChildrenAstar(this.area, this.target!.getX(), this.target!.getY()) as CellNode[];\r\n\r\n\t\t\t\tchildren.forEach((el) => {\r\n\t\t\t\t\tif (!this.virtualArea[el.getY()][el.getX()].visited) {\r\n\t\t\t\t\t\tthis.aStarPath.push(el);\r\n\t\t\t\t\t\tthis.area[el.getY()][el.getX()].passThrough = true;\r\n\t\t\t\t\t\tthis.virtualArea[el.getY()][el.getX()].visited = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic isFound():boolean {\r\n\t\treturn this.found;\r\n\t}\r\n}\r\n","import {CellType} from '../enums/CellType'\r\n\r\nexport class Cell {\r\n\tprivate x: number;\r\n\tprivate y: number;\r\n\tprivate static WIDTH = 20 as number;\r\n\tprivate static HEIGHT = 20 as number;\r\n\r\n\tpublic type: CellType;\r\n\r\n\tpublic path = false as boolean;\r\n\tpublic passThrough = false as boolean;\r\n\tpublic visited = false as boolean;\r\n\tpublic curr = false as boolean;\r\n\r\n\r\n\tconstructor(x: number, y: number, type: CellType) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.type = type;\r\n\t}\r\n\r\n\r\n\tpublic draw(cntx: CanvasRenderingContext2D, canvas: HTMLCanvasElement) {\r\n\t\tconst save = cntx.fillStyle!;\r\n\t\tcntx.fillStyle! = this.calculateColor(this.type);\r\n\t\tcntx.rect(this.x, this.y, Cell.WIDTH, Cell.HEIGHT);\r\n\t\tcntx.fillRect(this.x, this.y, Cell.WIDTH, Cell.HEIGHT);\r\n\r\n\t\tcntx.fillStyle! = save;\r\n\t}\r\n\r\n\r\n\tprivate calculateColor(type: CellType): string {\r\n\t\tlet color: string;\r\n\t\tswitch(type) {\r\n\t\t\tcase CellType.START:\r\n\t\t\t\tcolor = '#ff00ff';\r\n\t\t\t\tbreak;\r\n\t\t\tcase CellType.TARGET:\r\n\t\t\t\tcolor = '#ffff00';\r\n\t\t\t\tbreak;\r\n\t\t\tcase CellType.WALL:\r\n\t\t\t\tcolor = '#fff';\r\n\t\t\t\tbreak;\r\n\t\t\tcase CellType.EARTH:\r\n\t\t\tdefault:\r\n\t\t\t\tcolor = '#000';\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (this.curr && (this.type !== CellType.START && this.type !== CellType.TARGET)) {\r\n\t\t\tcolor = 'orange';\r\n\t\t}\r\n\r\n\t\tif (this.passThrough && (this.type !== CellType.START && this.type !== CellType.TARGET)) {\r\n\t\t\tcolor = 'aqua';\r\n\t\t}\r\n\r\n\t\tif  (this.visited && (this.type !== CellType.START && this.type !== CellType.TARGET)) {\r\n\t\t\tcolor = 'red';\r\n\t\t}\r\n\r\n\t\tif (this.path && (this.type !== CellType.START && this.type !== CellType.TARGET)) {\r\n\t\t\tcolor = 'green';\r\n\t\t}\r\n\r\n\t\treturn color;\r\n\t}\r\n\r\n\r\n\tpublic getX():number {\r\n\t\treturn this.x / Cell.WIDTH;\r\n\t}\r\n\r\n\r\n\tpublic getY():number {\r\n\t\treturn this.y / Cell.HEIGHT;\r\n\t}\r\n}\r\n","import { Algorithms } from \"../enums/Algorithms\";\r\nimport { CellNode } from \"../Objects/CellNode\";\r\nimport { Algorythm } from \"../Algorithms/Algorythm\";\r\nimport { BFS } from \"../Algorithms/BFS\";\r\nimport { AStar } from \"../Algorithms/AStar\";\r\nimport { CellType } from \"../enums/CellType\";\r\nimport { Cell } from \"./Cell\";\r\n\r\nexport class GameArea {\r\n\tprivate gameArea: Cell[][];\r\n\r\n\tprivate currentType = CellType.WALL as CellType;\r\n\r\n\tprivate algorithm = null as Algorythm | null;\r\n\r\n\tprivate started = false as boolean;\r\n\r\n\tprivate width: number;\r\n\r\n\tprivate static WIDTH = 20;\r\n\r\n\tpublic constructor(width: number) {\r\n\t\tthis.gameArea = this.initGameArea(width);\r\n\t\tthis.width = width;\r\n\t\twindow.addEventListener('typechanged', ((e: CustomEvent) => {\r\n\t\t\tthis.currentType = e.detail;\r\n\t\t}) as EventListener);\r\n\t\twindow.addEventListener('cleararea', (() => {\r\n\t\t\tthis.clearGameArea();\r\n\t\t}) as EventListener);\r\n\t\twindow.addEventListener('startinited', ((e: CustomEvent) => {\r\n\t\t\tthis.algorithm = this.pickAlgorythm(e.detail.algorithmName);\r\n\t\t\tthis.started = true;\r\n\t\t}) as EventListener);\r\n\t}\r\n\r\n\r\n\tpublic draw(cntx: CanvasRenderingContext2D, canvas: HTMLCanvasElement) {\r\n\t\tfor (let i = 0, limit = this.gameArea.length; i < limit; i++) {\r\n\t\t\tfor (let x = 0, xLimit = this.gameArea[i].length; x < xLimit; x++) {\r\n\t\t\t\tthis.gameArea[i][x].draw(cntx, canvas);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic tick() {\r\n\t\tif (this.algorithm !== undefined) {\r\n\t\t\tif (this.started) {\r\n\t\t\t\tthis.algorithm?.tick();\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.algorithm?.foundNode) {\r\n\t\t\tconst node = this.algorithm?.foundNode;\r\n\t\t\tthis.gameArea[node.getY()][node.getX()].path = true;\r\n\r\n\t\t\tlet parent = node.getParent() as CellNode | null;\r\n\r\n\t\t\twhile (parent !== null) {\r\n\t\t\t\tthis.gameArea[parent.getY()][parent.getX()].path = true;\r\n\t\t\t\tparent = parent.getParent();\r\n\t\t\t}\r\n\t\t\tthis.clearIntermediate();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic mouseOver(event: MouseEvent) {\r\n\t\tconst x = event.offsetX;\r\n\t\tconst y  = event.offsetY;\r\n\t\tconst indexX = Math.floor(x / GameArea.WIDTH);\r\n\t\tconst indexY = Math.floor(y / GameArea.WIDTH);\r\n\r\n\t\tif (event.buttons === 1 || event.type === 'click') {\r\n\t\t\tthis.changeType(indexX, indexY, this.currentType);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprivate clearIntermediate() {\r\n\t\tfor (let i = 0, iLimit = this.gameArea.length; i < iLimit; i++) {\r\n\t\t\tfor (let x = 0, xLimit = this.gameArea[i].length; x < xLimit; x++) {\r\n\t\t\t\tconst cell = this.gameArea[i][x];\r\n\t\t\t\tcell.curr = false;\r\n\t\t\t\tcell.passThrough = false;\r\n\t\t\t\tcell.visited = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprivate initGameArea(width: number): Cell[][] {\r\n\t\tconst area = [] as Cell[][];\r\n\t\tfor (let i = 0; i < width / GameArea.WIDTH; i++) {\r\n\t\t\tarea.push([]);\r\n\t\t\tfor (let x = 0; x < width / GameArea.WIDTH; x++) {\r\n\t\t\t\tconst cell = new Cell(x * GameArea.WIDTH, i * GameArea.WIDTH, CellType.EARTH);\r\n\t\t\t\tarea[i].push(cell);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn area;\r\n\t}\r\n\r\n\r\n\tprivate clearGameArea():void {\r\n\t\tthis.gameArea = this.initGameArea(this.width);\r\n\t\tthis.algorithm = null;\r\n\t\tconst event = new CustomEvent('areachanged', {\r\n\t\t\tdetail: {\r\n\t\t\t\tisReady: this.isStartSet() && this.isTargetSet(),\r\n\t\t\t}\r\n\t\t});\r\n\t\twindow.dispatchEvent(event);\r\n\t}\r\n\r\n\r\n\tprivate changeType(xIndex: number, yIndex: number, type: CellType): void {\r\n\t\tswitch(type) {\r\n\t\t\tcase CellType.START:\r\n\t\t\t\tif (this.isStartSet()) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase CellType.TARGET:\r\n\t\t\t\tif (this.isTargetSet()) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.gameArea[yIndex][xIndex].type = type;\r\n\t\tconst event = new CustomEvent('areachanged', {\r\n\t\t\tdetail: {\r\n\t\t\t\tisReady: this.isStartSet() && this.isTargetSet(),\r\n\t\t\t}\r\n\t\t});\r\n\t\twindow.dispatchEvent(event);\r\n\t}\r\n\r\n\r\n\tprivate isStartSet():boolean {\r\n\t\tfor (let i = 0, iLimit = this.gameArea.length; i < iLimit; i++) {\r\n\t\t\tfor (let x = 0, xLimit = this.gameArea[i].length; x < xLimit; x++) {\r\n\t\t\t\tif (this.gameArea[i][x].type === CellType.START) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tprivate isTargetSet():boolean {\r\n\t\tfor (let i = 0, iLimit = this.gameArea.length; i < iLimit; i++) {\r\n\t\t\tfor (let x = 0, xLimit = this.gameArea[i].length; x < xLimit; x++) {\r\n\t\t\t\tif (this.gameArea[i][x].type === CellType.TARGET) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tprivate pickAlgorythm(name: Algorithms): Algorythm {\r\n\t\tlet algo: Algorythm;\r\n\t\tswitch(name) {\r\n\t\t\tcase Algorithms.ASTAR:\r\n\t\t\t\talgo = new AStar(this.gameArea);\r\n\t\t\t\tbreak;\r\n\t\t\tcase Algorithms.BFS:\r\n\t\t\tdefault:\r\n\t\t\t\talgo = new BFS(this.gameArea);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn algo;\r\n\t}\r\n\r\n\r\n\tpublic getArea(): Cell[][] {\r\n\t\treturn this.gameArea;\r\n\t}\r\n}\r\n","import { GameState } from \"../GameState\";\r\nimport { GameStateManager } from \"../GameStateManager\";\r\nimport { GameArea } from \"../../GameArea/GameArea\";\r\n\r\nexport class MainState extends GameState {\r\n\r\n\tprivate gameArea: GameArea;\r\n\r\n\tpublic constructor(gsm: GameStateManager) {\r\n\t\tsuper(gsm);\r\n\t\tthis.gameArea = new GameArea(1000);\r\n\t}\r\n\r\n\r\n\tpublic tick(): void {\r\n\t\tthis.gameArea.tick();\r\n\t}\r\n\r\n\r\n\tpublic draw(cntx: CanvasRenderingContext2D, canvas: HTMLCanvasElement): void {\r\n\t\tthis.gameArea.draw(cntx, canvas);\r\n\t}\r\n\r\n\r\n\tpublic keyPressed(event: KeyboardEvent): void {\r\n\r\n\t}\r\n\r\n\r\n\tpublic mouseOver(event: MouseEvent): void {\r\n\t\tthis.gameArea.mouseOver(event);\r\n\t}\r\n}\r\n","import {GameStateManager} from './GameState/GameStateManager';\r\nimport { MainState } from './GameState/states/MainState';\r\nimport { Gui } from './gui/Gui';\r\n\r\nexport class GameView {\r\n\r\n\tprivate canvas: HTMLCanvasElement;\r\n\tprivate context: CanvasRenderingContext2D | null;\r\n\tprivate width: number;\r\n\tprivate height: number;\r\n\tprivate gsm: GameStateManager;\r\n\r\n\r\n\tpublic constructor(canvas: string) {\r\n\t\tthis.canvas = document.querySelector('#' + canvas) as HTMLCanvasElement;\r\n\t\tthis.context = this.canvas.getContext('2d');\r\n\t\tthis.width = this.canvas.width;\r\n\t\tthis.height = this.canvas.height;\r\n\t\tthis.gsm = new GameStateManager();\r\n\t\twindow.addEventListener('keypress', (event) => {\r\n\t\t\tthis.keyPressed(event);\r\n\t\t});\r\n\t\tthis.canvas.addEventListener('mousemove', (ev: MouseEvent) => {\r\n\t\t\tev.preventDefault();\r\n\t\t\tthis.mouseOver(ev);\r\n\t\t});\r\n\t\tthis.canvas.addEventListener('click', (ev) => {\r\n\t\t\tev.preventDefault();\r\n\t\t\tthis.mouseOver(ev);\r\n\t\t});\r\n\t\tthis.canvas.addEventListener('contextmenu', (ev) => {\r\n\t\t\tev.preventDefault();\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tpublic start() {\r\n\t\tthis.clear;\r\n\t\tthis.gsm.pushState(new MainState(this.gsm));\r\n\t\tthis.loop();\r\n\t}\r\n\r\n\r\n\tprivate render(): void {\r\n\t\tthis.context!.fillStyle = '#000';\r\n\t\tthis.context?.fillRect(0, 0, this.width, this.height);\r\n\t\tthis.gsm.draw(this.context!, this.canvas);\r\n\t}\r\n\r\n\r\n\tprivate tick(): void {\r\n\t\tthis.gsm.tick();\r\n\t}\r\n\r\n\r\n\tprivate keyPressed(event: KeyboardEvent): void {\r\n\t\tthis.gsm.keyPressed(event);\r\n\t}\r\n\r\n\r\n\tprivate mouseOver(event: MouseEvent): void {\r\n\t\tthis.gsm.mouseOver(event);\r\n\t}\r\n\r\n\r\n\tprivate loop(): void {\r\n\t\tthis.tick();\r\n\t\tthis.render();\r\n\t\twindow.requestAnimationFrame(() => this.loop());\r\n\t}\r\n\r\n\r\n\tpublic clear(): void {\r\n\t\tthis.context?.clearRect(0, 0, this.width, this.height);\r\n\t}\r\n}\r\n","import { CellType } from '../enums/CellType';\r\nimport { Algorithms } from '../enums/Algorithms';\r\n\r\nexport class Gui {\r\n\tprivate typeButtons: NodeListOf<HTMLDivElement>;\r\n\tprivate algoButtons: NodeListOf<HTMLDivElement>;\r\n\tprivate clearButton: HTMLDivElement;\r\n\tprivate startButton: HTMLDivElement;\r\n\r\n\tprivate currAlgorithm = Algorithms.BFS as Algorithms;\r\n\r\n\r\n\tprivate static TYPE_CLASS = 'b-type-picker__cell';\r\n\tprivate static ALGO_CLASS = 'b-algorithm-picker__cell';\r\n\tprivate static CLEAR_CLASS = 'b-clear';\r\n\tprivate static START_CLASS = 'b-start';\r\n\tprivate static ACTIVE_TYPE_CLASS = 'b-type-picker__cell--active';\r\n\tprivate static ACTIVE_ALGO_CLASS = 'b-algorithm-picker__cell--active';\r\n\tprivate static INACTIVE_START_CLASS = 'b-start--inactive';\r\n\r\n\tpublic constructor() {\r\n\t\tthis.typeButtons = document.querySelectorAll('.' + Gui.TYPE_CLASS);\r\n\t\tthis.algoButtons = document.querySelectorAll('.' + Gui.ALGO_CLASS);\r\n\t\tthis.clearButton = document.querySelector('.' + Gui.CLEAR_CLASS)!;\r\n\t\tthis.startButton = document.querySelector('.' + Gui.START_CLASS)!;\r\n\t\tthis.initTypeListeners();\r\n\t\tthis.initClearListener();\r\n\t\tthis.initAlgoListeners();\r\n\t\tthis.initStartButton();\r\n\t}\r\n\r\n\r\n\tprivate initTypeListeners():void {\r\n\t\tthis.typeButtons.forEach((element: HTMLDivElement) => {\r\n\t\t\telement.addEventListener('click', () => {\r\n\t\t\t\tthis.clearTypeActive();\r\n\t\t\t\telement.classList.add(Gui.ACTIVE_TYPE_CLASS);\r\n\t\t\t\tconst event = new CustomEvent('typechanged', {\r\n\t\t\t\t\tdetail: this.calculateCurrentType(element.id) as CellType,\r\n\t\t\t\t})\r\n\t\t\t\twindow.dispatchEvent(event);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tprivate initAlgoListeners():void {\r\n\t\tthis.algoButtons.forEach((element: HTMLDivElement) => {\r\n\t\t\telement.addEventListener('click', () => {\r\n\t\t\t\tthis.clearAlgoActive();\r\n\t\t\t\telement.classList.add(Gui.ACTIVE_ALGO_CLASS);\r\n\t\t\t\tthis.currAlgorithm = this.calculateCurrentAlgo(element.id);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tprivate initStartButton():void {\r\n\t\twindow.addEventListener('areachanged', ((e:CustomEvent) => {\r\n\t\t\tif (e.detail.isReady) {\r\n\t\t\t\tthis.startButton.classList.remove(Gui.INACTIVE_START_CLASS);\r\n\t\t\t} else {\r\n\t\t\t\tthis.startButton.classList.add(Gui.INACTIVE_START_CLASS);\r\n\t\t\t}\r\n\t\t}) as EventListener);\r\n\t\tthis.startButton.addEventListener('click', () => {\r\n\t\t\tconst event = new CustomEvent('startinited', {\r\n\t\t\t\tdetail: {\r\n\t\t\t\t\talgorithmName: this.currAlgorithm,\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\twindow.dispatchEvent(event);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tprivate initClearListener():void {\r\n\t\tthis.clearButton.addEventListener('click', () => {\r\n\t\t\tconst event = new CustomEvent('cleararea', {\r\n\r\n\t\t\t});\r\n\t\t\twindow.dispatchEvent(event);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tprivate clearTypeActive(): void {\r\n\t\tthis.typeButtons.forEach((element: HTMLDivElement) => {\r\n\t\t\telement.classList.remove(Gui.ACTIVE_TYPE_CLASS);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tprivate clearAlgoActive(): void {\r\n\t\tthis.algoButtons.forEach((element: HTMLDivElement) => {\r\n\t\t\telement.classList.remove(Gui.ACTIVE_ALGO_CLASS);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tprivate calculateCurrentAlgo(id: string):Algorithms {\r\n\t\tswitch(id) {\r\n\t\t\tcase 'ap-astar':\r\n\t\t\t\treturn Algorithms.ASTAR;\r\n\t\t\tcase 'ap-bfs':\r\n\t\t\tdefault:\r\n\t\t\t\treturn Algorithms.BFS;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprivate calculateCurrentType(id: string):CellType {\r\n\t\tswitch(id) {\r\n\t\t\tcase 'tp-target':\r\n\t\t\t\treturn CellType.TARGET;\r\n\t\t\tcase 'tp-wall':\r\n\t\t\t\treturn CellType.WALL;\r\n\t\t\tcase 'tp-start':\r\n\t\t\t\treturn CellType.START;\r\n\t\t\tcase 'tp-earth':\r\n\t\t\tdefault:\r\n\t\t\t\treturn CellType.EARTH;\r\n\t\t}\r\n\t}\r\n}\r\n","import { GameView } from './GameView';\r\nimport { Gui } from './gui/Gui';\r\nimport './scss/main.scss';\r\nimport './scss/gui/gui.scss';\r\nimport './scss/gui/type-picker.scss';\r\nimport './scss/gui/clear.scss';\r\nimport './scss/gui/start.scss';\r\nimport './scss/gui/algo-picker.scss';\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n\tconst view = new GameView('canvas');\r\n\tconst gui = new Gui();\r\n\tview.start();\r\n});\r\n"],"names":["Algorithms","CellType","this","array","peek","length","push","value","poll","target","pop","restructure","remove","t","filter","arr","forEach","size","states","Stack","pushState","state","tick","draw","cntx","canvas","keyPressed","event","mouseOver","gsm","area","init","path","virtualArea","initVirtualArea","virtArea","i","iLimit","x","xLimit","y","visited","findStartAndTarget","start","startFound","targetFound","type","START","TARGET","coordinates","parent","valueAStar","Number","MAX_SAFE_INTEGER","getChildren","children","maxPos","WALL","CellNode","getChildrenAstar","targetX","targetY","getDistance","computeValueAStar","addDistance","EARTH","STONE","SAND","WATER","getHeiuristic","Math","sqrt","getX","getY","getParent","getValueAStar","found","temp","shift","workingCell","curr","passThrough","foundNode","el","console","log","isFound","ALGORITHM_NAME","BFS","Algorythm","parentQ","leftQ","rightQ","comparator","a","b","heap","isEmpty","values","shiftUp","poppedValue","bottom","swap","shiftDown","replace","replacedValue","isGreater","j","node","maxChild","index","aStarPath","PriorityQueue","ASTAR","save","fillStyle","calculateColor","rect","Cell","WIDTH","HEIGHT","fillRect","color","width","currentType","algorithm","started","gameArea","initGameArea","window","addEventListener","e","detail","clearGameArea","pickAlgorythm","algorithmName","limit","undefined","clearIntermediate","offsetX","offsetY","indexX","floor","GameArea","indexY","buttons","changeType","cell","CustomEvent","isReady","isStartSet","isTargetSet","dispatchEvent","xIndex","yIndex","name","algo","AStar","getArea","GameState","document","querySelector","context","getContext","height","GameStateManager","ev","preventDefault","clear","MainState","loop","render","requestAnimationFrame","clearRect","currAlgorithm","typeButtons","querySelectorAll","Gui","TYPE_CLASS","algoButtons","ALGO_CLASS","clearButton","CLEAR_CLASS","startButton","START_CLASS","initTypeListeners","initClearListener","initAlgoListeners","initStartButton","element","clearTypeActive","classList","add","ACTIVE_TYPE_CLASS","calculateCurrentType","id","clearAlgoActive","ACTIVE_ALGO_CLASS","calculateCurrentAlgo","INACTIVE_START_CLASS","view","GameView"],"sourceRoot":""}